name: Docker Tag, Build and Push to DockerHub

on:
  workflow_dispatch:
    inputs:
      description:
        description: 'Release tag, build and push'
        required: false
        default: ''

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from Dockerfile
        id: get_version
        run: |
          VERSION=$(grep "ARG VERSION=" Dockerfile | cut -d= -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Get Release Description
        id: get_release_notes
        run: |
          RELEASE_NOTES=$(cat RELEASE.md)
          echo "release_notes<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag v${{ steps.get_version.outputs.version }}
          git push origin v${{ steps.get_version.outputs.version }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: v${{ steps.get_version.outputs.version }}
          body: ${{ steps.get_release_notes.outputs.release_notes }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Check version format (only publish the latest if the release is semantic x.x.x)
        id: check_version
        run: |
          if [[ ${{ steps.get_version.outputs.version }} =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "is_semantic=true" >> $GITHUB_OUTPUT
          else
            echo "is_semantic=false" >> $GITHUB_OUTPUT
          fi

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          build-args: |
              VERSION=${{ steps.get_version.outputs.version }}
          tags: |
              unraiders/unposer:${{ steps.get_version.outputs.version }}
              ${{ steps.check_version.outputs.is_semantic == 'true' && 'unraiders/unposer:latest' || '' }}